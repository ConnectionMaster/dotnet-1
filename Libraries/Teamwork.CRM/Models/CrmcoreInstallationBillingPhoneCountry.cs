// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Teamwork.CRM.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Country
    /// </summary>
    /// <remarks>
    /// Country represents a country.
    /// </remarks>
    public partial class CrmcoreInstallationBillingPhoneCountry
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CrmcoreInstallationBillingPhoneCountry class.
        /// </summary>
        public CrmcoreInstallationBillingPhoneCountry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CrmcoreInstallationBillingPhoneCountry class.
        /// </summary>
        /// <param name="tax">CountryVAT</param>
        public CrmcoreInstallationBillingPhoneCountry(string code = default(string), int? id = default(int?), bool? inEU = default(bool?), string name = default(string), string phoneCode = default(string), CrmcoreInstallationBillingPhoneCountryTax tax = default(CrmcoreInstallationBillingPhoneCountryTax), int? vatId = default(int?), string vatName = default(string))
        {
            Code = code;
            Id = id;
            InEU = inEU;
            Name = name;
            PhoneCode = phoneCode;
            Tax = tax;
            VatId = vatId;
            VatName = vatName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inEU")]
        public bool? InEU { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phoneCode")]
        public string PhoneCode { get; set; }

        /// <summary>
        /// Gets or sets countryVAT
        /// </summary>
        /// <remarks>
        /// CountryVAT represents VAT or equivalent tax for a country.
        /// </remarks>
        [JsonProperty(PropertyName = "tax")]
        public CrmcoreInstallationBillingPhoneCountryTax Tax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatId")]
        public int? VatId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatName")]
        public string VatName { get; set; }

    }
}
