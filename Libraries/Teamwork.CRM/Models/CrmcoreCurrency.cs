// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Teamwork.CRM.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Currency
    /// </summary>
    /// <remarks>
    /// Currency represents a currency in the CRM system.
    /// </remarks>
    public partial class CrmcoreCurrency
    {
        /// <summary>
        /// Initializes a new instance of the CrmcoreCurrency class.
        /// </summary>
        public CrmcoreCurrency()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CrmcoreCurrency class.
        /// </summary>
        /// <param name="code">The 3 digit currency code, e.g
        /// USD/GBP/EUR.</param>
        /// <param name="createdBy">[Resource identifier
        /// object](https://crmdev-teamwork.docs.stoplight.io/documentation/general/entity-models#relationships)
        /// which describes a relationship to another entity.</param>
        /// <param name="decimalPoints">Decimal points of the currency, e.g 2
        /// for USD/GBP/EUR.</param>
        /// <param name="deletedBy">[Resource identifier
        /// object](https://crmdev-teamwork.docs.stoplight.io/documentation/general/entity-models#relationships)
        /// which describes a relationship to another entity.</param>
        /// <param name="name">Name of the currency</param>
        /// <param name="state">State of the currency. Possible values include:
        /// 'active', 'inactive'</param>
        /// <param name="symbol">Symbol of the currency, e.g $ for USD, € for
        /// EUR.</param>
        /// <param name="updatedBy">[Resource identifier
        /// object](https://crmdev-teamwork.docs.stoplight.io/documentation/general/entity-models#relationships)
        /// which describes a relationship to another entity.</param>
        public CrmcoreCurrency(string code = default(string), System.DateTime? createdAt = default(System.DateTime?), CrmcoreCurrencyCreatedBy createdBy = default(CrmcoreCurrencyCreatedBy), int? decimalPoints = default(int?), System.DateTime? deletedAt = default(System.DateTime?), CrmcoreCurrencyDeletedBy deletedBy = default(CrmcoreCurrencyDeletedBy), int? id = default(int?), string name = default(string), string state = default(string), string symbol = default(string), System.DateTime? updatedAt = default(System.DateTime?), CrmcoreCurrencyUpdatedBy updatedBy = default(CrmcoreCurrencyUpdatedBy), int? updatedSourceId = default(int?))
        {
            Code = code;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            DecimalPoints = decimalPoints;
            DeletedAt = deletedAt;
            DeletedBy = deletedBy;
            Id = id;
            Name = name;
            State = state;
            Symbol = symbol;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
            UpdatedSourceId = updatedSourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the 3 digit currency code, e.g USD/GBP/EUR.
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Gets or sets [Resource identifier
        /// object](https://crmdev-teamwork.docs.stoplight.io/documentation/general/entity-models#relationships)
        /// which describes a relationship to another entity.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public CrmcoreCurrencyCreatedBy CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets decimal points of the currency, e.g 2 for USD/GBP/EUR.
        /// </summary>
        [JsonProperty(PropertyName = "decimalPoints")]
        public int? DecimalPoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedAt")]
        public System.DateTime? DeletedAt { get; set; }

        /// <summary>
        /// Gets or sets [Resource identifier
        /// object](https://crmdev-teamwork.docs.stoplight.io/documentation/general/entity-models#relationships)
        /// which describes a relationship to another entity.
        /// </summary>
        [JsonProperty(PropertyName = "deletedBy")]
        public CrmcoreCurrencyDeletedBy DeletedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or sets name of the currency
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets state of the currency. Possible values include:
        /// 'active', 'inactive'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets symbol of the currency, e.g $ for USD, € for EUR.
        /// </summary>
        [JsonProperty(PropertyName = "symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Gets or sets [Resource identifier
        /// object](https://crmdev-teamwork.docs.stoplight.io/documentation/general/entity-models#relationships)
        /// which describes a relationship to another entity.
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public CrmcoreCurrencyUpdatedBy UpdatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedSourceId")]
        public int? UpdatedSourceId { get; set; }

    }
}
