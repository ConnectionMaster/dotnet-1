// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Teamwork.CRM.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Installation
    /// </summary>
    /// <remarks>
    /// Installation represents a CRM installation.
    /// </remarks>
    public partial class CrmcoreInstallation
    {
        /// <summary>
        /// Initializes a new instance of the CrmcoreInstallation class.
        /// </summary>
        public CrmcoreInstallation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CrmcoreInstallation class.
        /// </summary>
        /// <param
        /// name="allowRememberMe">installationPasswordPolicyAllowRememberMe</param>
        /// <param name="altDomain">installationAltDomain</param>
        /// <param name="altDomain2">installationAltDomain2</param>
        /// <param
        /// name="autoProvision">allinstallations_settings.installationAutoProvisionUsers</param>
        /// <param name="awsRegion">installationAWSRegion</param>
        /// <param name="baseHref">installationBaseHref</param>
        /// <param name="billingAddress">Address</param>
        /// <param name="billingCurrency">3 char currency code</param>
        /// <param name="billingEmail">installationBillingContactEmail</param>
        /// <param name="billingPhone">Phone</param>
        /// <param name="cloudSSLEnabled">installationCloudSSLEnabled</param>
        /// <param name="code">installationCode</param>
        /// <param name="corsEnabled">installationCORSEnabled</param>
        /// <param name="domain">installationDomain</param>
        /// <param
        /// name="domainWhitelistEnabled">installationDomainWhitelistingEnabled</param>
        /// <param
        /// name="failedLoginLockAfter">installationFailedLoginLockAfterCount</param>
        /// <param
        /// name="failedLoginLockFor">installationFailedLoginLockForMins</param>
        /// <param
        /// name="favicon">shardX.installation.installationFavIcon</param>
        /// <param name="googleSSOEnabled">Settings</param>
        /// <param name="invoiceTo">installationBillingNameOverride</param>
        /// <param
        /// name="ipLockdownEnabled">installationIPLockdownEnabled</param>
        /// <param
        /// name="isTest">allinstallations_settings.installationIsTestAccount</param>
        /// <param name="lastLogin">installationLastLoginDate</param>
        /// <param name="logo">shardX.installation.installationLogo</param>
        /// <param name="name">Basic info.</param>
        /// <param name="notes">installationNotes</param>
        /// <param name="settings">ResourceIdentifier</param>
        /// <param name="shard">installationDatabaseShardNo</param>
        /// <param
        /// name="showNameOnLogin">shardX.installation.installationShowSiteNameOnLoginScreen</param>
        /// <param name="signupCountry">installationSignupCountryCode</param>
        /// <param name="signupIP">installationSignupIP</param>
        /// <param name="sslEnabled">installationSSLEnabled</param>
        /// <param
        /// name="standardLoginEnabled">installationTWUnamePasswordEnabled</param>
        /// <param name="state">installationStatus</param>
        /// <param name="stripeId">Billing</param>
        /// <param
        /// name="useBGColor">installationUseBackgroundColorOnLogin</param>
        /// <param name="vatExempt">installationIsVATExempt</param>
        /// <param name="vatNumber">installationBillingVATNumber</param>
        public CrmcoreInstallation(bool? allowRememberMe = default(bool?), string altDomain = default(string), string altDomain2 = default(string), object apps = default(object), bool? autoProvision = default(bool?), string awsRegion = default(string), string baseHref = default(string), CrmcoreInstallationBillingAddress billingAddress = default(CrmcoreInstallationBillingAddress), string billingCurrency = default(string), string billingEmail = default(string), CrmcoreInstallationBillingPhone billingPhone = default(CrmcoreInstallationBillingPhone), bool? cloudSSLEnabled = default(bool?), string code = default(string), bool? corsEnabled = default(bool?), System.DateTime? createdAt = default(System.DateTime?), int? createdBy = default(int?), System.DateTime? deletedAt = default(System.DateTime?), int? deletedBy = default(int?), string domain = default(string), bool? domainWhitelistEnabled = default(bool?), int? failedLoginLockAfter = default(int?), int? failedLoginLockFor = default(int?), string favicon = default(string), bool? googleSSOEnabled = default(bool?), int? id = default(int?), string invoiceTo = default(string), bool? ipLockdownEnabled = default(bool?), bool? isTest = default(bool?), System.DateTime? lastLogin = default(System.DateTime?), string logo = default(string), string name = default(string), string notes = default(string), CrmcoreInstallationSettings settings = default(CrmcoreInstallationSettings), int? shard = default(int?), bool? showNameOnLogin = default(bool?), string signupCountry = default(string), string signupIP = default(string), bool? sslEnabled = default(bool?), bool? standardLoginEnabled = default(bool?), string state = default(string), string stripeId = default(string), System.DateTime? updatedAt = default(System.DateTime?), int? updatedBy = default(int?), bool? useBGColor = default(bool?), bool? vatExempt = default(bool?), string vatNumber = default(string))
        {
            AllowRememberMe = allowRememberMe;
            AltDomain = altDomain;
            AltDomain2 = altDomain2;
            Apps = apps;
            AutoProvision = autoProvision;
            AwsRegion = awsRegion;
            BaseHref = baseHref;
            BillingAddress = billingAddress;
            BillingCurrency = billingCurrency;
            BillingEmail = billingEmail;
            BillingPhone = billingPhone;
            CloudSSLEnabled = cloudSSLEnabled;
            Code = code;
            CorsEnabled = corsEnabled;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            DeletedAt = deletedAt;
            DeletedBy = deletedBy;
            Domain = domain;
            DomainWhitelistEnabled = domainWhitelistEnabled;
            FailedLoginLockAfter = failedLoginLockAfter;
            FailedLoginLockFor = failedLoginLockFor;
            Favicon = favicon;
            GoogleSSOEnabled = googleSSOEnabled;
            Id = id;
            InvoiceTo = invoiceTo;
            IpLockdownEnabled = ipLockdownEnabled;
            IsTest = isTest;
            LastLogin = lastLogin;
            Logo = logo;
            Name = name;
            Notes = notes;
            Settings = settings;
            Shard = shard;
            ShowNameOnLogin = showNameOnLogin;
            SignupCountry = signupCountry;
            SignupIP = signupIP;
            SslEnabled = sslEnabled;
            StandardLoginEnabled = standardLoginEnabled;
            State = state;
            StripeId = stripeId;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
            UseBGColor = useBGColor;
            VatExempt = vatExempt;
            VatNumber = vatNumber;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets installationPasswordPolicyAllowRememberMe
        /// </summary>
        [JsonProperty(PropertyName = "allowRememberMe")]
        public bool? AllowRememberMe { get; set; }

        /// <summary>
        /// Gets or sets installationAltDomain
        /// </summary>
        [JsonProperty(PropertyName = "altDomain")]
        public string AltDomain { get; set; }

        /// <summary>
        /// Gets or sets installationAltDomain2
        /// </summary>
        [JsonProperty(PropertyName = "altDomain2")]
        public string AltDomain2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apps")]
        public object Apps { get; set; }

        /// <summary>
        /// Gets or sets
        /// allinstallations_settings.installationAutoProvisionUsers
        /// </summary>
        [JsonProperty(PropertyName = "autoProvision")]
        public bool? AutoProvision { get; set; }

        /// <summary>
        /// Gets or sets installationAWSRegion
        /// </summary>
        [JsonProperty(PropertyName = "awsRegion")]
        public string AwsRegion { get; set; }

        /// <summary>
        /// Gets or sets installationBaseHref
        /// </summary>
        [JsonProperty(PropertyName = "baseHref")]
        public string BaseHref { get; set; }

        /// <summary>
        /// Gets or sets address
        /// </summary>
        /// <remarks>
        /// Address is a postal/real-life address.
        /// </remarks>
        [JsonProperty(PropertyName = "billingAddress")]
        public CrmcoreInstallationBillingAddress BillingAddress { get; set; }

        /// <summary>
        /// Gets or sets 3 char currency code
        /// </summary>
        [JsonProperty(PropertyName = "billingCurrency")]
        public string BillingCurrency { get; set; }

        /// <summary>
        /// Gets or sets installationBillingContactEmail
        /// </summary>
        [JsonProperty(PropertyName = "billingEmail")]
        public string BillingEmail { get; set; }

        /// <summary>
        /// Gets or sets phone
        /// </summary>
        /// <remarks>
        /// Phone is a phone number.
        /// </remarks>
        [JsonProperty(PropertyName = "billingPhone")]
        public CrmcoreInstallationBillingPhone BillingPhone { get; set; }

        /// <summary>
        /// Gets or sets installationCloudSSLEnabled
        /// </summary>
        [JsonProperty(PropertyName = "cloudSSLEnabled")]
        public bool? CloudSSLEnabled { get; set; }

        /// <summary>
        /// Gets or sets installationCode
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets installationCORSEnabled
        /// </summary>
        [JsonProperty(PropertyName = "corsEnabled")]
        public bool? CorsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public int? CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedAt")]
        public System.DateTime? DeletedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedBy")]
        public int? DeletedBy { get; set; }

        /// <summary>
        /// Gets or sets installationDomain
        /// </summary>
        [JsonProperty(PropertyName = "domain")]
        public string Domain { get; set; }

        /// <summary>
        /// Gets or sets installationDomainWhitelistingEnabled
        /// </summary>
        [JsonProperty(PropertyName = "domainWhitelistEnabled")]
        public bool? DomainWhitelistEnabled { get; set; }

        /// <summary>
        /// Gets or sets installationFailedLoginLockAfterCount
        /// </summary>
        [JsonProperty(PropertyName = "failedLoginLockAfter")]
        public int? FailedLoginLockAfter { get; set; }

        /// <summary>
        /// Gets or sets installationFailedLoginLockForMins
        /// </summary>
        [JsonProperty(PropertyName = "failedLoginLockFor")]
        public int? FailedLoginLockFor { get; set; }

        /// <summary>
        /// Gets or sets shardX.installation.installationFavIcon
        /// </summary>
        [JsonProperty(PropertyName = "favicon")]
        public string Favicon { get; set; }

        /// <summary>
        /// Gets or sets settings
        /// </summary>
        [JsonProperty(PropertyName = "googleSSOEnabled")]
        public bool? GoogleSSOEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or sets installationBillingNameOverride
        /// </summary>
        [JsonProperty(PropertyName = "invoiceTo")]
        public string InvoiceTo { get; set; }

        /// <summary>
        /// Gets or sets installationIPLockdownEnabled
        /// </summary>
        [JsonProperty(PropertyName = "ipLockdownEnabled")]
        public bool? IpLockdownEnabled { get; set; }

        /// <summary>
        /// Gets or sets allinstallations_settings.installationIsTestAccount
        /// </summary>
        [JsonProperty(PropertyName = "isTest")]
        public bool? IsTest { get; set; }

        /// <summary>
        /// Gets or sets installationLastLoginDate
        /// </summary>
        [JsonProperty(PropertyName = "lastLogin")]
        public System.DateTime? LastLogin { get; set; }

        /// <summary>
        /// Gets or sets shardX.installation.installationLogo
        /// </summary>
        [JsonProperty(PropertyName = "logo")]
        public string Logo { get; set; }

        /// <summary>
        /// Gets or sets basic info.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets installationNotes
        /// </summary>
        [JsonProperty(PropertyName = "notes")]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or sets resourceIdentifier
        /// </summary>
        /// <remarks>
        /// ResourceIdentifier identifies a relationship resource.
        /// </remarks>
        [JsonProperty(PropertyName = "settings")]
        public CrmcoreInstallationSettings Settings { get; set; }

        /// <summary>
        /// Gets or sets installationDatabaseShardNo
        /// </summary>
        [JsonProperty(PropertyName = "shard")]
        public int? Shard { get; set; }

        /// <summary>
        /// Gets or sets
        /// shardX.installation.installationShowSiteNameOnLoginScreen
        /// </summary>
        [JsonProperty(PropertyName = "showNameOnLogin")]
        public bool? ShowNameOnLogin { get; set; }

        /// <summary>
        /// Gets or sets installationSignupCountryCode
        /// </summary>
        [JsonProperty(PropertyName = "signupCountry")]
        public string SignupCountry { get; set; }

        /// <summary>
        /// Gets or sets installationSignupIP
        /// </summary>
        [JsonProperty(PropertyName = "signupIP")]
        public string SignupIP { get; set; }

        /// <summary>
        /// Gets or sets installationSSLEnabled
        /// </summary>
        [JsonProperty(PropertyName = "sslEnabled")]
        public bool? SslEnabled { get; set; }

        /// <summary>
        /// Gets or sets installationTWUnamePasswordEnabled
        /// </summary>
        [JsonProperty(PropertyName = "standardLoginEnabled")]
        public bool? StandardLoginEnabled { get; set; }

        /// <summary>
        /// Gets or sets installationStatus
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets billing
        /// </summary>
        [JsonProperty(PropertyName = "stripeId")]
        public string StripeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public int? UpdatedBy { get; set; }

        /// <summary>
        /// Gets or sets installationUseBackgroundColorOnLogin
        /// </summary>
        [JsonProperty(PropertyName = "useBGColor")]
        public bool? UseBGColor { get; set; }

        /// <summary>
        /// Gets or sets installationIsVATExempt
        /// </summary>
        [JsonProperty(PropertyName = "vatExempt")]
        public bool? VatExempt { get; set; }

        /// <summary>
        /// Gets or sets installationBillingVATNumber
        /// </summary>
        [JsonProperty(PropertyName = "vatNumber")]
        public string VatNumber { get; set; }

    }
}
