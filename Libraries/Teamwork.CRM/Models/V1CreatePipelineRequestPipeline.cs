// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Teamwork.CRM.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class V1CreatePipelineRequestPipeline
    {
        /// <summary>
        /// Initializes a new instance of the V1CreatePipelineRequestPipeline
        /// class.
        /// </summary>
        public V1CreatePipelineRequestPipeline()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1CreatePipelineRequestPipeline
        /// class.
        /// </summary>
        /// <param name="isQualified">If true then leads inside of this
        /// pipeline will be considered opportunities,
        /// see [Leads, opportunities, and deals](
        /// https://crmdev-teamwork.docs.stoplight.io/documentation/miscellaneous/leads-opportunities)
        /// for more information.</param>
        /// <param name="orderIndex">Position of the pipeline in the set of all
        /// pipelines.
        /// Lower numbers come first when retrieving multiple elements at
        /// once.</param>
        public V1CreatePipelineRequestPipeline(string name, bool? isQualified = default(bool?), int? orderIndex = default(int?))
        {
            IsQualified = isQualified;
            Name = name;
            OrderIndex = orderIndex;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets if true then leads inside of this pipeline will be
        /// considered opportunities,
        /// see [Leads, opportunities, and deals](
        /// https://crmdev-teamwork.docs.stoplight.io/documentation/miscellaneous/leads-opportunities)
        /// for more information.
        /// </summary>
        [JsonProperty(PropertyName = "isQualified")]
        public bool? IsQualified { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets position of the pipeline in the set of all pipelines.
        /// Lower numbers come first when retrieving multiple elements at once.
        /// </summary>
        [JsonProperty(PropertyName = "orderIndex")]
        public int? OrderIndex { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
