// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Teamwork.CRM.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// productsListResponse
    /// </summary>
    public partial class V1productsListResponse
    {
        /// <summary>
        /// Initializes a new instance of the V1productsListResponse class.
        /// </summary>
        public V1productsListResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1productsListResponse class.
        /// </summary>
        /// <param name="included">Included</param>
        /// <param name="meta">ListResponseMeta</param>
        public V1productsListResponse(object included = default(object), V1productsListResponseMeta meta = default(V1productsListResponseMeta), IList<V1productsListResponseProductsItem> products = default(IList<V1productsListResponseProductsItem>))
        {
            Included = included;
            Meta = meta;
            Products = products;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets included
        /// </summary>
        /// <remarks>
        /// Included contains all the side-loaded data of a response.
        /// See [including related
        /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities).
        /// </remarks>
        [JsonProperty(PropertyName = "included")]
        public object Included { get; set; }

        /// <summary>
        /// Gets or sets listResponseMeta
        /// </summary>
        /// <remarks>
        /// ListResponseMeta provides meta definition for list views
        /// </remarks>
        [JsonProperty(PropertyName = "meta")]
        public V1productsListResponseMeta Meta { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "products")]
        public IList<V1productsListResponseProductsItem> Products { get; set; }

    }
}
