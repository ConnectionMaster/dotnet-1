// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Teamwork.CRM
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for POST.
    /// </summary>
    public static partial class POSTExtensions
    {
            /// <summary>
            /// Create a new activity.
            /// </summary>
            /// <remarks>
            /// Creates a activity and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - activityType
            /// - assignees
            /// - contacts
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createActivityRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Activitiesjson(this IPOST operations, V1createActivityRequest v1createActivityRequest, string include = default(string))
            {
                return operations.ActivitiesjsonAsync(v1createActivityRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new activity.
            /// </summary>
            /// <remarks>
            /// Creates a activity and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - activityType
            /// - assignees
            /// - contacts
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createActivityRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ActivitiesjsonAsync(this IPOST operations, V1createActivityRequest v1createActivityRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ActivitiesAsync(v1createActivityRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create an activity type
            /// </summary>
            /// <remarks>
            /// Creates an activity type and returns it.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createActivityTypeRequest'>
            /// </param>
            public static object ActivityTypesjson(this IPOST operations, V1createActivityTypeRequest v1createActivityTypeRequest)
            {
                return operations.ActivityTypesjsonAsync(v1createActivityTypeRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create an activity type
            /// </summary>
            /// <remarks>
            /// Creates an activity type and returns it.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createActivityTypeRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ActivityTypesjsonAsync(this IPOST operations, V1createActivityTypeRequest v1createActivityTypeRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ActivityTypesAsync(v1createActivityTypeRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new company
            /// </summary>
            /// <remarks>
            /// Creates a company and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - avatar
            /// - contacts.avatar
            /// - contacts.phoneNumbers.code
            /// - contacts
            /// - country
            /// - owner.avatar
            /// - phoneCodes
            /// - phoneNumbers.code
            /// - timezone
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createCompanyRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Companiesjson(this IPOST operations, V1createCompanyRequest v1createCompanyRequest, string include = default(string))
            {
                return operations.CompaniesjsonAsync(v1createCompanyRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new company
            /// </summary>
            /// <remarks>
            /// Creates a company and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - avatar
            /// - contacts.avatar
            /// - contacts.phoneNumbers.code
            /// - contacts
            /// - country
            /// - owner.avatar
            /// - phoneCodes
            /// - phoneNumbers.code
            /// - timezone
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createCompanyRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CompaniesjsonAsync(this IPOST operations, V1createCompanyRequest v1createCompanyRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CompaniesAsync(v1createCompanyRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new contact
            /// </summary>
            /// <remarks>
            /// Creates a contact and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - avatar
            /// - company.avatar
            /// - company.country
            /// - company.phoneNumbers.code
            /// - company.timezone
            /// - country
            /// - owner.avatar
            /// - phoneCodes
            /// - phoneNumbers.code
            /// - timezone
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createContactRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Contactsjson(this IPOST operations, V1createContactRequest v1createContactRequest, string include = default(string))
            {
                return operations.ContactsjsonAsync(v1createContactRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new contact
            /// </summary>
            /// <remarks>
            /// Creates a contact and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - avatar
            /// - company.avatar
            /// - company.country
            /// - company.phoneNumbers.code
            /// - company.timezone
            /// - country
            /// - owner.avatar
            /// - phoneCodes
            /// - phoneNumbers.code
            /// - timezone
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createContactRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ContactsjsonAsync(this IPOST operations, V1createContactRequest v1createContactRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ContactsAsync(v1createContactRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new custom field
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createCustomFieldRequest'>
            /// </param>
            public static object CustomFieldsjson(this IPOST operations, V1createCustomFieldRequest v1createCustomFieldRequest)
            {
                return operations.CustomFieldsjsonAsync(v1createCustomFieldRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new custom field
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createCustomFieldRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CustomFieldsjsonAsync(this IPOST operations, V1createCustomFieldRequest v1createCustomFieldRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CustomFieldsAsync(v1createCustomFieldRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new customFilter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createCustomFilterRequest'>
            /// </param>
            public static object CustomFiltersjson(this IPOST operations, V1createCustomFilterRequest v1createCustomFilterRequest)
            {
                return operations.CustomFiltersjsonAsync(v1createCustomFilterRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new customFilter
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createCustomFilterRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CustomFiltersjsonAsync(this IPOST operations, V1createCustomFilterRequest v1createCustomFilterRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CustomFiltersAsync(v1createCustomFilterRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new deal
            /// </summary>
            /// <remarks>
            /// Creates a deal and returns it.
            ///
            /// Make sure you first read how to work with [leads, opportunities, and
            /// deals.](https://crmdev-teamwork.docs.stoplight.io/documentation/miscellaneous/leads-opportunities)
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - company.avatar
            /// - company.phoneNumbers.code
            /// - company.timezone
            /// - contacts.avatar
            /// - contacts.company
            /// - contacts.phoneNumbers.code
            /// - contacts.timezone
            /// - currency
            /// - lostReason
            /// - mainContact.avatar
            /// - mainContact.timezone
            /// - owner.avatar
            /// - products
            /// - stage.pipeline
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createDealRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Dealsjson(this IPOST operations, V1createDealRequest v1createDealRequest, string include = default(string))
            {
                return operations.DealsjsonAsync(v1createDealRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new deal
            /// </summary>
            /// <remarks>
            /// Creates a deal and returns it.
            ///
            /// Make sure you first read how to work with [leads, opportunities, and
            /// deals.](https://crmdev-teamwork.docs.stoplight.io/documentation/miscellaneous/leads-opportunities)
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - company.avatar
            /// - company.phoneNumbers.code
            /// - company.timezone
            /// - contacts.avatar
            /// - contacts.company
            /// - contacts.phoneNumbers.code
            /// - contacts.timezone
            /// - currency
            /// - lostReason
            /// - mainContact.avatar
            /// - mainContact.timezone
            /// - owner.avatar
            /// - products
            /// - stage.pipeline
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createDealRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> DealsjsonAsync(this IPOST operations, V1createDealRequest v1createDealRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DealsAsync(v1createDealRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new export
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createExportRequest'>
            /// </param>
            public static object Exportsjson(this IPOST operations, V1createExportRequest v1createExportRequest)
            {
                return operations.ExportsjsonAsync(v1createExportRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new export
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createExportRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ExportsjsonAsync(this IPOST operations, V1createExportRequest v1createExportRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ExportsAsync(v1createExportRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new lostReason
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1CreateLostReasonRequest'>
            /// </param>
            public static object LostReasonsjson(this IPOST operations, V1CreateLostReasonRequest v1CreateLostReasonRequest)
            {
                return operations.LostReasonsjsonAsync(v1CreateLostReasonRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new lostReason
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1CreateLostReasonRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> LostReasonsjsonAsync(this IPOST operations, V1CreateLostReasonRequest v1CreateLostReasonRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.LostReasonsAsync(v1CreateLostReasonRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new note
            /// </summary>
            /// <remarks>
            /// Creates a note and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - createdBy
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createNoteRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Notesjson(this IPOST operations, V1createNoteRequest v1createNoteRequest, string include = default(string))
            {
                return operations.NotesjsonAsync(v1createNoteRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new note
            /// </summary>
            /// <remarks>
            /// Creates a note and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - createdBy
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createNoteRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> NotesjsonAsync(this IPOST operations, V1createNoteRequest v1createNoteRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.NotesAsync(v1createNoteRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new pipeline
            /// </summary>
            /// <remarks>
            /// Creates a pipeline and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - stages
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1CreatePipelineRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Pipelinesjson(this IPOST operations, V1CreatePipelineRequest v1CreatePipelineRequest, string include = default(string))
            {
                return operations.PipelinesjsonAsync(v1CreatePipelineRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new pipeline
            /// </summary>
            /// <remarks>
            /// Creates a pipeline and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - stages
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1CreatePipelineRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> PipelinesjsonAsync(this IPOST operations, V1CreatePipelineRequest v1CreatePipelineRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PipelinesAsync(v1CreatePipelineRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new product
            /// </summary>
            /// <remarks>
            /// Creates a product and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - owner
            /// - prices
            /// - avatar
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createProductRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Productsjson(this IPOST operations, V1createProductRequest v1createProductRequest, string include = default(string))
            {
                return operations.ProductsjsonAsync(v1createProductRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new product
            /// </summary>
            /// <remarks>
            /// Creates a product and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - owner
            /// - prices
            /// - avatar
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createProductRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ProductsjsonAsync(this IPOST operations, V1createProductRequest v1createProductRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ProductsAsync(v1createProductRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new stage
            /// </summary>
            /// <remarks>
            /// Creates a new stage and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - pipeline
            /// - deals
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createStageRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Stagesjson(this IPOST operations, V1createStageRequest v1createStageRequest, string include = default(string))
            {
                return operations.StagesjsonAsync(v1createStageRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new stage
            /// </summary>
            /// <remarks>
            /// Creates a new stage and returns it.
            ///
            /// The following values are allowed in the [include query
            /// parameter](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities):
            /// - pipeline
            /// - deals
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='v1createStageRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> StagesjsonAsync(this IPOST operations, V1createStageRequest v1createStageRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.StagesAsync(v1createStageRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new file
            /// </summary>
            /// <remarks>
            /// Creates one or more files and returns it.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='crmcoreFileUploadRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            public static object Filesjson(this IPOST operations, CrmcoreFileUploadRequest crmcoreFileUploadRequest, string include = default(string))
            {
                return operations.FilesjsonAsync(crmcoreFileUploadRequest, include).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new file
            /// </summary>
            /// <remarks>
            /// Creates one or more files and returns it.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='crmcoreFileUploadRequest'>
            /// </param>
            /// <param name='include'>
            /// Comma separated list of relationships to include in the response.
            /// See
            /// [including related
            /// entities](https://crmdev-teamwork.docs.stoplight.io/documentation/general/related-entities)
            /// for more detailed documentation of how this works.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> FilesjsonAsync(this IPOST operations, CrmcoreFileUploadRequest crmcoreFileUploadRequest, string include = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.FilesAsync(crmcoreFileUploadRequest, include, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Activate a user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static object Activatejson(this IPOST operations, int id)
            {
                return operations.ActivatejsonAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Activate a user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ActivatejsonAsync(this IPOST operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ActivateAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
